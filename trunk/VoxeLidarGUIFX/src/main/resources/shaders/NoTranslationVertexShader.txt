#version 140

uniform mat4 viewMatrix, projMatrix;

in vec4 position;
in vec3 color;

out vec3 Color;
 
void main()
{
    
    Color = color;
    Color.r = mix(0, 1, (position.x*position.y*position.z*color.r)*20);
    Color.g = mix(0, 1, (position.x*position.y*position.z*color.g)*20);
    Color.b = mix(0, 1, (position.x*position.y*position.z*color.b)*20);

    mat4 translation = mat4(vec4(1,0,0,0.8),
                        vec4(0,1,0,0.8),
                        vec4(0,0,1,0),
                        vec4(0,0,0,1));

    mat4 rotation = mat4(vec4(viewMatrix[0][0],viewMatrix[1][0],viewMatrix[2][0],0),
                        vec4(viewMatrix[0][1],viewMatrix[1][1],viewMatrix[2][1],0),
                        vec4(viewMatrix[0][2],viewMatrix[1][2],viewMatrix[2][2],0),
                        vec4(viewMatrix[0][3],viewMatrix[1][3],viewMatrix[2][3],1));

    mat4 scale = mat4(vec4(0.03,0,0,0),
                        vec4(0,0.03,0,0),
                        vec4(0,0,0.03,0),
                        vec4(0,0,0,1));



    mat4 vm = translation * rotation ;

    gl_Position = scale * position * rotation *translation;
}