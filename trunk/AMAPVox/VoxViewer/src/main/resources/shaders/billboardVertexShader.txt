#version 140

uniform mat4 viewMatrix, projMatrix;
uniform vec3 eye;

in vec4 position;

in vec2 textureCoordinates;
out vec2 texCoordinates;
 
void main()
{
    texCoordinates = textureCoordinates;

    mat4 newModelView = viewMatrix;

    
    // First column.
    newModelView[0][0] = 1.0; 
    newModelView[0][1] = 0.0; 
    newModelView[0][2] = 0.0; 
    //newModelView[3][0] = 0.0; 

    // Second column.
    newModelView[1][0] = 0.0; 
    newModelView[1][1] = 1.0; 
    newModelView[1][2] = 0.0;
    //newModelView[3][1] = 0.0; 

    // Third column.
    newModelView[2][0] = 0.0; 
    newModelView[2][1] = 0.0; 
    newModelView[2][2] = 1.0;
    //newModelView[3][2] = 0.0;

    // Fourth column.
    //newModelView[0][3] = 10;
    //newModelView[1][3] = 0;
    //newModelView[2][3] = 0;

    

    //vec4 origin = (position+vec4(10, 0, 0,0.0));
    //gl_Position = projMatrix * (newModelView * vec4(0, 0, 0, 1)) + vec4(origin.xy, 0, 0);
    //gl_Position = projMatrix * position;

   

    gl_Position = projMatrix * viewMatrix * position ;
}